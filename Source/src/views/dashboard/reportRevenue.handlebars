<div class="container-fluid">
  <h4 class="my-2 text-primary text-center text-uppercase">Thống kê doanh thu</h4>

  <div class="my-4">
    <button class="btn btn-outline-secondary sevenDayReport">7 ngày qua</button>
    <button class="btn btn-outline-secondary oneMonthReport">1 tháng qua</button>
    <button id="confirmReport" class="btn btn-success">Thống kê</button>

  </div>

  <div class="row">
    <div class="col-4">
      <label for="fromDate">Từ ngày</label>
      <input type="date" name="fromDate" class="form-control" style="width: 30vh">
    </div>

    <div class="col-4">
      <label for="toDate">Đến ngày</label>
      <input type="date" name="toDate" class="form-control" style="width: 30vh">
    </div>

  </div>

  <div class="card shadow mb-4 mt-4">
    <div class="card-header py-3">
      <h6 class="m-0 font-weight-bold text-primary">Doanh thu <div class="totalMount"></div>
      </h6>
    </div>
    <div class="card-body">
      <div class="chart-bar">
        <canvas id="myBarChart7Day"></canvas>
      </div>
    </div>
  </div>

  <div class="card shadow mb-4">
    <div class="card-header py-3">
      <h6 class="m-0 font-weight-bold text-primary">Danh Sách đơn hàng</h6>
    </div>
    <div class="card-body">
      <div class="table-responsive">
        <table class="table table-bordered" id="dataTableOrders" width="100%" cellspacing="0">
          <thead>
            <tr>
              <th>Mã đơn hàng</th>
              <th>Tên khách hàng</th>
              <th>Tổng số tiền</th>
              <th>Số lượng sản phẩm</th>
              <th>Ngày mua</th>

            </tr>
          </thead>

          <tbody>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <script>

    var ctx = document.getElementById("myBarChart7Day");
    let configChart = {
      type: 'bar',
      data: {
        labels: ["Quý 1", "Quý 2", "Quý 3", "Quý 4"],
        datasets: [{
          label: "Số tiền",
          backgroundColor: "#4e73df",
          hoverBackgroundColor: "#2e59d9",
          borderColor: "#4e73df",
          data: [100, 125, 168, 123],
        }],
      },
      options: {
        maintainAspectRatio: false,
        layout: {
          padding: {
            left: 10,
            right: 25,
            top: 25,
            bottom: 0
          }
        },
        scales: {
          xAxes: [{
            time: {
              unit: 'month'
            },
            gridLines: {
              display: false,
              drawBorder: false
            },
            ticks: {
              maxTicksLimit: 6
            },
            maxBarThickness: 25,
          }],
          yAxes: [{
            ticks: {
              min: 0,
              max: 10000,
              maxTicksLimit: 5,
              padding: 10,
              // Include a dollar sign in the ticks
              callback: function (value, index, values) {
                return '$' + number_format(value);
              }
            },
            gridLines: {
              color: "rgb(234, 236, 244)",
              zeroLineColor: "rgb(234, 236, 244)",
              drawBorder: false,
              borderDash: [2],
              zeroLineBorderDash: [2]
            }
          }],
        },
        legend: {
          display: false
        },
        tooltips: {
          titleMarginBottom: 10,
          titleFontColor: '#6e707e',
          titleFontSize: 14,
          backgroundColor: "rgb(255,255,255)",
          bodyFontColor: "#858796",
          borderColor: '#dddfeb',
          borderWidth: 1,
          xPadding: 15,
          yPadding: 15,
          displayColors: false,
          caretPadding: 10,
          callbacks: {
            label: function (tooltipItem, chart) {
              var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
              return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
            }
          }
        },
      }
    }
    var barChart = new Chart(ctx, configChart);

    getReportForSevenDay();

    $('.oneMonthReport').click(function () {
      fetch('/dashboard/revenue', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          type: 'oneMonth'
        })
      })
        .then(res => res.json())
        .then(data => {
          configChart.data.labels = data.totalAmountDate.map(item => item._id);
          configChart.data.datasets[0].data = data.totalAmountDate.map(item => item.totalAmount)
          barChart.update();

        })
    })
    $('.sevenDayReport').click(function () { getReportForSevenDay(); });

    $('#confirmReport').click(function () {
      let fromDate = $('input[name="fromDate"]').val();
      let toDate = $('input[name="toDate"]').val();
      fetch('/dashboard/revenue', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          type: 'custom',
          dateStart: fromDate,
          dateEnd: toDate
        })
      })
        .then(res => res.json())
        .then(data => {
          configChart.data.labels = data.totalAmountDate.map(item => item._id);
          configChart.data.datasets[0].data = data.totalAmountDate.map(item => item.totalAmount)
          barChart.update();
        })

    })

    function getReportForSevenDay() {
      fetch('/dashboard/revenue', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          type: 'sevenDay'
        })
      })
        .then(res => res.json())
        .then(data => {
          configChart.data.labels = data.totalAmountDate.map(item => item._id);
          configChart.data.datasets[0].data = data.totalAmountDate.map(item => item.totalAmount)
          barChart.update();

          $('#dataTableOrders').DataTable({
            data: data.orders,
            columns: [
              { data: '_id' },
              { data: 'name_customer' },
              { data: 'totalAmount' },
              { data: 'numberOfproduct' },
              { data: 'purchaseDate' },
            ]
          })
          
        })
    };
  </script>